<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Electronics on James Liu</title>
    <link>//jamesliu.io/tags/electronics/</link>
    <description>Recent content in Electronics on James Liu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-au</language>
    <copyright>Â© {year}</copyright>
    <lastBuildDate>Wed, 21 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="//jamesliu.io/tags/electronics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A shallow dive into ADCs</title>
      <link>//jamesliu.io/blog/2020-10-21-a-shallow-dive-into-adcs/</link>
      <pubDate>Wed, 21 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>//jamesliu.io/blog/2020-10-21-a-shallow-dive-into-adcs/</guid>
      <description>In the process of designing a digital synthesiser , I spent the weekend learning a little bit about ADCs. This post provides a basic introduction to what they are, and aims to get you familiar with the high level concepts and terminology used in the ADC domain.
An ADC is an Analog-to-Digital Converter; it translates analog signals into digital inputs which your program can interpret.
Analog signals An example of an analog signal you might want to process is the distance you move a thumbstick from its centered position.</description>
    </item>
    
  </channel>
</rss>
